<Application x:Class="IntegratedPresenter.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:IntegratedPresenter"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        
        
        <RadialGradientBrush x:Key="RedLight">
            <RadialGradientBrush.GradientOrigin>0.5, 0.5</RadialGradientBrush.GradientOrigin>
            <RadialGradientBrush.Center>0.5, 0.5</RadialGradientBrush.Center>
            <RadialGradientBrush.GradientStops>
                <GradientStop Color="#FF930505" Offset="1.9"></GradientStop>
                <GradientStop Color="#FFFFAEAE" Offset="0"></GradientStop>
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="GrayLight">
            <RadialGradientBrush.GradientOrigin>0.5, 0.5</RadialGradientBrush.GradientOrigin>
            <RadialGradientBrush.Center>0.5, 0.5</RadialGradientBrush.Center>
            <RadialGradientBrush.GradientStops>
                <GradientStop Color="Black" Offset="2.0"></GradientStop>
                <GradientStop Color="DarkGray" Offset="0"></GradientStop>
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="OffLight">
            <RadialGradientBrush.GradientOrigin>0.5, 0.5</RadialGradientBrush.GradientOrigin>
            <RadialGradientBrush.Center>0.5, 0.5</RadialGradientBrush.Center>
            <RadialGradientBrush.GradientStops>
                <GradientStop Color="Black" Offset="2.0"></GradientStop>
                <GradientStop Color="Gray" Offset="0"></GradientStop>
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>

        <RadialGradientBrush x:Key="GreenLight">
            <RadialGradientBrush.GradientOrigin>0.5, 0.5</RadialGradientBrush.GradientOrigin>
            <RadialGradientBrush.Center>0.5, 0.5</RadialGradientBrush.Center>
            <RadialGradientBrush.GradientStops>
                <GradientStop Color="#096900" Offset="1.9"></GradientStop>
                <GradientStop Color="#b4ffad" Offset="0"></GradientStop>
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="YellowLight">
            <RadialGradientBrush.GradientOrigin>0.5, 0.5</RadialGradientBrush.GradientOrigin>
            <RadialGradientBrush.Center>0.5, 0.5</RadialGradientBrush.Center>
            <RadialGradientBrush.GradientStops>
                <GradientStop Color="#d9d500" Offset="2.0"></GradientStop>
                <GradientStop Color="#c4c10c" Offset="0.8"></GradientStop>
                <GradientStop Color="#fffecc" Offset="0"></GradientStop>
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>

        <Style x:Key="UIShortcutBdr" TargetType="Border">
            <Setter Property="IsHitTestVisible" Value="False"></Setter>
            <Setter Property="BorderBrush" Value="Gray"></Setter>
            <Setter Property="BorderThickness" Value="3"></Setter>
            <Setter Property="CornerRadius" Value="10"></Setter>
            <Setter Property="Panel.ZIndex" Value="1"></Setter>
            <Setter Property="Padding" Value="15, 8, 15, 8"></Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="White" Opacity="0.5"></SolidColorBrush>
                </Setter.Value> 
            </Setter>
            <Setter Property="Border.Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="3" Direction="-120" Color="White" Opacity="0.9" BlurRadius="2"/>
                </Setter.Value> 
            </Setter>
        </Style>
        
        <Style x:Key="UIShortcut" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="Panel.ZIndex" Value="2"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="IsHitTestVisible" Value="False"></Setter>
            <!--<Setter Property="TextBlock.Effect">-->
                <!--<Setter.Value>-->
                    <!--<DropShadowEffect ShadowDepth="4" Direction="-120" Color="Gray" Opacity="0.8" BlurRadius="1"/>-->
                <!--</Setter.Value>--> 
            <!--</Setter>-->
            <Setter Property="FontSize" Value="50"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="Opacity" Value="1"></Setter>
        </Style>

        <Style x:Key="GrayText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#5f5f5f"></Setter>
        </Style>

        <Style x:Key="GroupBorder" TargetType="Border">
            <Setter Property="Background" Value="#2f2f30"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="CornerRadius" Value="4,4,4,4"></Setter>
        </Style>


        <Style x:Key="darkTextbox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#1f1f1f"></Setter>
            <Setter Property="Cursor" Value="IBeam"></Setter>
            <Setter Property="Foreground" Value="Orange"></Setter>
            <Setter Property="BorderBrush" Value="DarkGray"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="CaretBrush" Value="White"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="3"></Setter>
        </Style>

        <Style x:Key="SwitcherButton"  TargetType="{x:Type Button}">
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Background" Value="{StaticResource GrayLight}"></Setter>
            <Setter Property="Foreground" Value="#2a2a2a"></Setter>
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="1,1,1,1" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Orange" TargetName="Border"></Setter>
                                <Setter Property="BorderThickness" Value="1,1,1,1" TargetName="Border"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>

            </Style.Triggers>
        </Style>

        <Style x:Key="SwitcherButton_Disabled"  TargetType="{x:Type Button}">
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Background" Value="{StaticResource OffLight}"></Setter>
            <Setter Property="Foreground" Value="#2a2a2a"></Setter>
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="1,1,1,1" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="TextButton"  TargetType="{x:Type Button}">
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="1,1,1,1" Background="Transparent">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Orange" TargetName="Border"></Setter>
                                <Setter Property="BorderThickness" Value="1,1,1,1" TargetName="Border"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="InactiveSwitcherButton"  TargetType="{x:Type Button}">
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Foreground" Value="Gray"></Setter>
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Gray" BorderThickness="1,1,1,1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PIPControlButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="80"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Name="BorderOnAir" BorderThickness="2" BorderBrush="{TemplateBinding Property=Background}">
                            <Border Name="Border" BorderBrush="Gray" BorderThickness="1">
                                <ContentPresenter Content="{TemplateBinding Property=ContentControl.Content}"></ContentPresenter>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Orange" TargetName="Border"></Setter>
                                <Setter Property="BorderThickness" Value="1,1,1,1" TargetName="Border"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="InactivePIPControlButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="80"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Name="Border" BorderBrush="Gray" BorderThickness="1">
                            <ContentPresenter Content="{TemplateBinding Property=ContentControl.Content}"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </Application.Resources>
</Application>
